{"ast":null,"code":"import _objectSpread from\"C:/Users/user/Desktop/DOCKpushTEST/Front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{getCookie}from\"./session_token\";export const signup=async(username,password)=>{let resp=await request(\"/signup/\",\"POST\",true,{},JSON.stringify({username:username,password:password}));const status=resp.status;resp=await resp.json();return _objectSpread(_objectSpread({},resp),{},{status:status});};export const login=async(username,password)=>{let resp=await request(\"/login/\",\"POST\",true,{},JSON.stringify({username:username,password:password}));const status=resp.status;resp=await resp.json();return _objectSpread(_objectSpread({},resp),{},{status:status});};export const getRooms=async()=>{var _getCookie;const csrfToken=(_getCookie=getCookie('csrftoken'))!==null&&_getCookie!==void 0?_getCookie:\"\";let resp=await request(\"/my_rooms/\",\"GET\",true,{'X-CSRFToken':csrfToken});resp=await resp.json();return resp;};export const createGame=async name=>{var _getCookie2;const csrfToken=(_getCookie2=getCookie('csrftoken'))!==null&&_getCookie2!==void 0?_getCookie2:\"\";let resp=await request(\"/create_room/\",\"POST\",true,{'X-CSRFToken':csrfToken},JSON.stringify({opponent_username:name}));const status=resp.status;resp=await resp.json();return _objectSpread(_objectSpread({},resp),{},{status:status});};export const getGameRoom=async id=>{var _getCookie3;const csrfToken=(_getCookie3=getCookie('csrftoken'))!==null&&_getCookie3!==void 0?_getCookie3:\"\";let resp=await request(\"/my_room/\".concat(id,\"/\"),\"GET\",true,{'X-CSRFToken':csrfToken});const status=resp.status;resp=await resp.json();return resp;};export const reqGameRoom=async(id,room)=>{var _getCookie4;const csrfToken=(_getCookie4=getCookie('csrftoken'))!==null&&_getCookie4!==void 0?_getCookie4:\"\";let resp=await request(\"/my_room/\".concat(id,\"/\"),\"POST\",true,{'X-CSRFToken':csrfToken},JSON.stringify(_objectSpread({},room)));const status=resp.status;resp=await resp.json();return resp;};export const reqGameTurn=async(id,cell)=>{var _getCookie5;const csrfToken=(_getCookie5=getCookie('csrftoken'))!==null&&_getCookie5!==void 0?_getCookie5:\"\";let resp=await request(\"/my_room/\".concat(id,\"/update/\").concat(cell.x,\"/\").concat(cell.y,\"/\"),\"PUT\",true,{'X-CSRFToken':csrfToken},JSON.stringify({has_ship:cell.has_ship,is_shot:cell.is_shot,is_mis_shot:cell.is_mis_shot}));const status=resp.status;resp=await resp.json();return resp;};export const reqGameDel=async id=>{var _getCookie6;const csrfToken=(_getCookie6=getCookie('csrftoken'))!==null&&_getCookie6!==void 0?_getCookie6:\"\";let resp=await request(\"/my_room/\".concat(id,\"/delete/\"),\"DELETE\",true,{'X-CSRFToken':csrfToken});};const request=async function(url,method,credentials,headers){let body=arguments.length>4&&arguments[4]!==undefined?arguments[4]:null;const baseUrl=\"/api\";// Используйте правильную переменную окружения\nconsole.log(\"Fetch URL:\",\"\".concat(baseUrl).concat(url));if(!baseUrl){throw new Error('Base URL is not defined');}const csrfToken=getCookie('csrftoken');// Получаем CSRF токен из cookies\nconst updatedHeaders=_objectSpread(_objectSpread({'Content-Type':'application/json'},headers),csrfToken?{'X-CSRFToken':csrfToken}:{});const response=await fetch(\"\".concat(baseUrl).concat(url),{method:method,credentials:credentials?\"include\":undefined,// или null, если не нужно передавать cookies\nheaders:updatedHeaders,body:body});if(!response.ok){if(response.status>=400){const errorText=await response.text();throw new Error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430: \".concat(response.status,\" - \").concat(errorText));}}return response;};","map":{"version":3,"names":["getCookie","signup","username","password","resp","request","JSON","stringify","status","json","_objectSpread","login","getRooms","_getCookie","csrfToken","createGame","name","_getCookie2","opponent_username","getGameRoom","id","_getCookie3","concat","reqGameRoom","room","_getCookie4","reqGameTurn","cell","_getCookie5","x","y","has_ship","is_shot","is_mis_shot","reqGameDel","_getCookie6","url","method","credentials","headers","body","arguments","length","undefined","baseUrl","console","log","Error","updatedHeaders","response","fetch","ok","errorText","text"],"sources":["C:/Users/user/Desktop/DOCKpushTEST/Front/src/utils/api.ts"],"sourcesContent":["import { METHODS } from \"http\";\r\nimport { AuthResponse, GameSectionType, CreateGameMessage, RoomType, RoomMessage, CellType } from '../types/types';\r\nimport { getCookie } from \"./session_token\";\r\n\r\n\r\n\r\nexport const signup = async (username: string, password: string): Promise<AuthResponse> => {\r\n    let resp = await request(\"/signup/\", \"POST\", true, {}, JSON.stringify({username: username, password: password}));\r\n    const status = resp.status\r\n    resp = await resp.json();\r\n    return {\r\n        ...resp,\r\n        status: status\r\n    };\r\n}\r\n\r\nexport const login = async (username: string, password: string): Promise<AuthResponse> => {\r\n    let resp = await request(\"/login/\", \"POST\", true, {}, JSON.stringify({username: username, password: password}));\r\n    const status = resp.status\r\n    resp = await resp.json();\r\n    return {\r\n          ...resp,\r\n          status: status\r\n    };\r\n}\r\n\r\nexport const getRooms = async (): Promise<GameSectionType[]> => {\r\n    const csrfToken = getCookie('csrftoken') ?? \"\";\r\n    let resp = await request(\"/my_rooms/\", \"GET\", true, {'X-CSRFToken': csrfToken});\r\n    resp = await resp.json();\r\n    return resp;\r\n}\r\n\r\nexport const createGame = async (name: string): Promise<CreateGameMessage> => {\r\n    const csrfToken = getCookie('csrftoken') ?? \"\";\r\n    let resp = await request(\"/create_room/\", \"POST\", true, {'X-CSRFToken': csrfToken}, JSON.stringify({\r\n      opponent_username: name\r\n    }));\r\n    const status = resp.status\r\n    resp = await resp.json();\r\n    return {\r\n          ...resp,\r\n          status: status\r\n    };\r\n}\r\n\r\nexport const getGameRoom = async (id: string): Promise<RoomType> => {\r\n    const csrfToken = getCookie('csrftoken') ?? \"\";\r\n    let resp = await request(`/my_room/${id}/`, \"GET\", true, {'X-CSRFToken': csrfToken});\r\n    const status = resp.status\r\n    resp = await resp.json();\r\n    return resp;\r\n}\r\n\r\nexport const reqGameRoom = async (id: string, room: RoomType): Promise<RoomMessage> => {\r\n    const csrfToken = getCookie('csrftoken') ?? \"\";\r\n    let resp = await request(`/my_room/${id}/`, \"POST\", true, {'X-CSRFToken': csrfToken},\r\n      JSON.stringify({\r\n        ...room\r\n      })\r\n    );\r\n    const status = resp.status\r\n    resp = await resp.json();\r\n    return resp;\r\n}\r\n\r\nexport const reqGameTurn = async (id: string, cell: CellType): Promise<RoomType> => {\r\n    const csrfToken = getCookie('csrftoken') ?? \"\";\r\n    let resp = await request(`/my_room/${id}/update/${cell.x}/${cell.y}/`, \"PUT\", true, {'X-CSRFToken': csrfToken}, JSON.stringify({\r\n      has_ship: cell.has_ship,\r\n      is_shot: cell.is_shot,\r\n      is_mis_shot: cell.is_mis_shot\r\n    }));\r\n    const status = resp.status\r\n    resp = await resp.json();\r\n    return resp;\r\n}\r\n\r\nexport const reqGameDel = async (id: string) => {\r\n    const csrfToken = getCookie('csrftoken') ?? \"\";\r\n    let resp = await request(`/my_room/${id}/delete/`, \"DELETE\", true, {'X-CSRFToken': csrfToken});\r\n}\r\n\r\nconst request = async (url: string, method: string, credentials: boolean, headers: HeadersInit, body: BodyInit | null = null): Promise<any> => {\r\n    const baseUrl = \"/api\";  // Используйте правильную переменную окружения\r\n    console.log(\"Fetch URL:\", `${baseUrl}${url}`);\r\n    if (!baseUrl) {\r\n        throw new Error('Base URL is not defined');\r\n    }\r\n\r\n    const csrfToken = getCookie('csrftoken');  // Получаем CSRF токен из cookies\r\n    const updatedHeaders = {\r\n        'Content-Type': 'application/json',\r\n        ...headers,\r\n        ...(csrfToken ? { 'X-CSRFToken': csrfToken } : {}),  // Добавляем CSRF токен в заголовки, если он существует\r\n    };\r\n\r\n\r\n    const response = await fetch(`${baseUrl}${url}`, \r\n    {\r\n        method: method,\r\n        credentials: credentials ? \"include\" : undefined,  // или null, если не нужно передавать cookies\r\n        headers: updatedHeaders,\r\n        body: body,\r\n    });\r\n\r\n    if (!response.ok) {\r\n        if (response.status >= 400) {\r\n            const errorText = await response.text();\r\n            throw new Error(`Ошибка сервера: ${response.status} - ${errorText}`);\r\n        }\r\n    }\r\n\r\n    return response;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}