{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Battleships\\\\Front\\\\src\\\\components\\\\Home\\\\createGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../../styles/CreateGame.css\";\nimport { createGame } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateGame = ({\n  handleSubmitShowModal,\n  createGameSuccess\n}) => {\n  _s();\n  const [statusInput, setStatusInput] = useState();\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const hadnleCreateGame = async () => {\n    setLoading(true);\n    try {\n      var _message$status;\n      let message = await createGame(name);\n      setStatusInput(message);\n      console.log(message);\n      if ((_message$status = message === null || message === void 0 ? void 0 : message.status) !== null && _message$status !== void 0 ? _message$status : 500 < 300) {\n        var _message$room_id;\n        createGameSuccess((_message$room_id = message === null || message === void 0 ? void 0 : message.room_id) !== null && _message$room_id !== void 0 ? _message$room_id : \"\");\n        handleSubmitShowModal();\n      }\n    } catch (error) {\n      setStatusInput({\n        message: error.message\n      });\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    onClick: handleSubmitShowModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createGame\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closeWindow\",\n        onClick: handleSubmitShowModal,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"createGame__inputName\",\n        maxLength: 20,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"createGame__button\",\n        onClick: hadnleCreateGame,\n        disabled: loading,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0438\\u0433\\u0440\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createGame__message\",\n        children: statusInput === null || statusInput === void 0 ? void 0 : statusInput.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateGame, \"uDh+BiCfXwr8Z0OQlHXNvq8ogsY=\");\n_c = CreateGame;\nexport default CreateGame;\nvar _c;\n$RefreshReg$(_c, \"CreateGame\");","map":{"version":3,"names":["React","useState","createGame","jsxDEV","_jsxDEV","CreateGame","handleSubmitShowModal","createGameSuccess","_s","statusInput","setStatusInput","name","setName","loading","setLoading","hadnleCreateGame","_message$status","message","console","log","status","_message$room_id","room_id","error","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","maxLength","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Battleships/Front/src/components/Home/createGame.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { CreateGameMessage, CreateGameProps } from '../../types/types';\r\nimport \"../../styles/CreateGame.css\";\r\nimport { createGame } from '../../utils/api';\r\n\r\nconst CreateGame: React.FC<CreateGameProps> = ({handleSubmitShowModal, createGameSuccess}) => {\r\n\r\n    const [statusInput, setStatusInput] = useState<CreateGameMessage>()\r\n    const [name, setName] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n        const hadnleCreateGame = async () => {\r\n            setLoading(true);\r\n            try {\r\n                let message = await createGame(name);\r\n                setStatusInput(message);\r\n                console.log(message)\r\n                if(message?.status ?? 500 < 300)\r\n                {\r\n                    createGameSuccess(message?.room_id ?? \"\")\r\n                    handleSubmitShowModal()\r\n                }\r\n            } catch (error: any) {\r\n                setStatusInput({message: error.message});\r\n                setLoading(false);\r\n            }\r\n            setLoading(false);\r\n        };\r\n    \r\n\r\n    return (\r\n        <div className=\"overlay\" onClick={handleSubmitShowModal}>\r\n            <div className=\"createGame\" onClick={(e) => e.stopPropagation()}>\r\n                <div className='closeWindow' onClick={handleSubmitShowModal}>X</div>\r\n                <input \r\n                    className=\"createGame__inputName\" maxLength={20}\r\n                    value={name} \r\n                    onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                <button className=\"createGame__button\" onClick={hadnleCreateGame} disabled={loading}>\r\n                    Создать игру\r\n                </button>\r\n                <div className={\"createGame__message\"}>{statusInput?.message}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}