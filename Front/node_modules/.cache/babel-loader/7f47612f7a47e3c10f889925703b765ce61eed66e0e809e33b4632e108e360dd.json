{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Battleships\\\\Front\\\\src\\\\pages\\\\Room.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport '../styles/Room.css';\nimport { getGameRoom, reqGameTurn } from \"../utils/api\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Cell from \"../components/Room/Cell\";\nimport Final from '../components/Room/Final';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Room() {\n  _s();\n  var _room$player_field, _room$opponent_field;\n  const [room, setRoom] = useState({\n    id: \"\",\n    name: \"\",\n    turn: \"\",\n    current_turn: \"\",\n    player_field: [],\n    opponent_field: []\n  });\n  const {\n    id\n  } = useParams();\n  const [final, setFinal] = useState({\n    isFinal: false,\n    final: \"\",\n    id: \"\"\n  });\n  const [waiting, setWaiting] = useState(true);\n  const navigate = useNavigate();\n  let interval;\n  useLayoutEffect(() => {\n    const fetchData = async () => {\n      try {\n        const resp = await getGameRoom(id);\n        setRoom(resp);\n      } catch (error) {\n        console.error('Ошибка при получении комнаты:', error);\n        clearInterval(interval);\n        navigate('/');\n      }\n    };\n    fetchData();\n    interval = setInterval(fetchData, 1000);\n  }, []);\n  useEffect(() => {\n    if (room) {\n      let countOfOpponent = 0;\n      let countOfPlayer = 0;\n      if (room.current_turn == \"Ваш ход\") {\n        setWaiting(false);\n      } else {\n        setWaiting(true);\n      }\n      console.log(room);\n      if (room.player_field.length < 1) {\n        return;\n      }\n      for (let x = 0; x < 100; x++) {\n        if (room.opponent_field[x].has_ship && room.opponent_field[x].is_shot) {\n          countOfOpponent++;\n        }\n        if (room.player_field[x].has_ship && room.player_field[x].is_shot) {\n          countOfPlayer++;\n        }\n      }\n      if (countOfOpponent >= 16) {\n        setFinal({\n          isFinal: true,\n          final: \"Выиграли\",\n          id: id\n        });\n        clearInterval(interval);\n        setWaiting(true);\n      }\n      if (countOfPlayer >= 16) {\n        setFinal({\n          isFinal: true,\n          final: \"Проиграли\",\n          id: id\n        });\n        clearInterval(interval);\n        setWaiting(true);\n      }\n    }\n  }, [room]);\n  const updateTurn = async cell => {\n    try {\n      if (id) {\n        await reqGameTurn(id, cell);\n        const resp = await getGameRoom(id);\n        setRoom(resp);\n      }\n    } catch (error) {\n      console.error('Ошибка при получении комнаты:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__roomName\",\n        children: room === null || room === void 0 ? void 0 : room.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameZone\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: room === null || room === void 0 ? void 0 : (_room$player_field = room.player_field) === null || _room$player_field === void 0 ? void 0 : _room$player_field.map(cell => /*#__PURE__*/_jsxDEV(Cell, {\n          cell: cell,\n          my: true,\n          updateTurn: updateTurn,\n          isWaiting: waiting\n        }, `${cell.x}-${cell.y}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: room === null || room === void 0 ? void 0 : (_room$opponent_field = room.opponent_field) === null || _room$opponent_field === void 0 ? void 0 : _room$opponent_field.map(cell => /*#__PURE__*/_jsxDEV(Cell, {\n          cell: cell,\n          my: false,\n          updateTurn: updateTurn,\n          isWaiting: waiting\n        }, `${cell.x}-${cell.y}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info__turn\",\n        children: [\"\\u0425\\u043E\\u0434: \", room === null || room === void 0 ? void 0 : room.turn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info__turnOwner\",\n        children: [\"\\u0427\\u0435\\u0439 \\u0445\\u043E\\u0434: \", room === null || room === void 0 ? void 0 : room.current_turn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), final.isFinal ? /*#__PURE__*/_jsxDEV(Final, {\n      final: final.final,\n      id: final.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(Room, \"/z8pveAaaNp4jgRbMtuZM9uLDbM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","getGameRoom","reqGameTurn","useNavigate","useParams","Cell","Final","jsxDEV","_jsxDEV","Fragment","_Fragment","Room","_s","_room$player_field","_room$opponent_field","room","setRoom","id","name","turn","current_turn","player_field","opponent_field","final","setFinal","isFinal","waiting","setWaiting","navigate","interval","fetchData","resp","error","console","clearInterval","setInterval","countOfOpponent","countOfPlayer","log","length","x","has_ship","is_shot","updateTurn","cell","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","my","isWaiting","y","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Battleships/Front/src/pages/Room.tsx"],"sourcesContent":["import React, {useEffect, useLayoutEffect, useState} from 'react';\r\nimport '../styles/Room.css';\r\nimport { RoomType, RoomMessage, CellType, CellExportType } from '../types/types';\r\nimport {getGameRoom, reqGameTurn} from \"../utils/api\"\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Cell from \"../components/Room/Cell\"\r\nimport Final from '../components/Room/Final';\r\n\r\nfunction Room() {\r\n    const [room, setRoom] = useState<RoomType>({id: \"\",\r\n  name: \"\",\r\n  turn: \"\",\r\n  current_turn: \"\",\r\n  player_field: [],\r\n  opponent_field: []})\r\n    const { id } = useParams<{ id: string }>();\r\n    const [final, setFinal] = useState<{isFinal: boolean, final: string, id: string}>({isFinal: false, final: \"\", id: \"\"})\r\n    const [waiting, setWaiting] = useState<boolean>(true)\r\n    const navigate = useNavigate();\r\n    let interval:NodeJS.Timer;\r\n\r\n    useLayoutEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const resp = await getGameRoom(id!);\r\n                setRoom(resp);\r\n            } catch (error) {\r\n                console.error('Ошибка при получении комнаты:', error);\r\n                clearInterval(interval)\r\n                navigate('/')\r\n            }\r\n        };\r\n        fetchData()\r\n        interval = setInterval(fetchData, 1000)\r\n    }, []); \r\n\r\n    useEffect(() => {\r\n    if (room) {\r\n        let countOfOpponent = 0\r\n        let countOfPlayer = 0\r\n        if(room.current_turn == \"Ваш ход\")\r\n        {\r\n            setWaiting(false)\r\n        }\r\n        else\r\n        {\r\n            setWaiting(true)\r\n        }\r\n        console.log(room)\r\n        if(room.player_field.length < 1)\r\n        {\r\n            return\r\n        }\r\n        for(let x: number = 0; x < 100; x++)\r\n        {\r\n            if(room.opponent_field[x].has_ship && room.opponent_field[x].is_shot)\r\n            {\r\n                countOfOpponent++;\r\n            }\r\n            if(room.player_field[x].has_ship && room.player_field[x].is_shot)\r\n            {\r\n                countOfPlayer++;\r\n            }\r\n        }\r\n        if(countOfOpponent >= 16)\r\n        {\r\n            setFinal({isFinal: true, final: \"Выиграли\", id: id!})\r\n            clearInterval(interval)\r\n            setWaiting(true)\r\n        }\r\n        if(countOfPlayer >= 16)\r\n        {\r\n            setFinal({isFinal: true, final: \"Проиграли\", id: id!})\r\n            clearInterval(interval)    \r\n            setWaiting(true)\r\n        }\r\n    }\r\n    }, [room]);\r\n\r\n    const updateTurn = async (cell: CellType) =>\r\n    {\r\n        try {\r\n            if (id) {\r\n                await reqGameTurn(id, cell);\r\n                const resp = await getGameRoom(id);\r\n                setRoom(resp);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при получении комнаты:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"room\">\r\n            <div className=\"header\">\r\n                <div className=\"header__roomName\">{room?.name}</div>\r\n            </div>\r\n            <div className=\"gameZone\">\r\n                <div className=\"field\">\r\n                    {room?.player_field?.map((cell: CellType) => (\r\n                        <Cell key={`${cell.x}-${cell.y}`} cell={cell} my={true} updateTurn={updateTurn} isWaiting={waiting}></Cell>\r\n                     ))}\r\n                </div>\r\n                <div className=\"field\">\r\n                     {room?.opponent_field?.map((cell: CellType) => (\r\n                        <Cell key={`${cell.x}-${cell.y}`} cell={cell} my={false} updateTurn={updateTurn} isWaiting={waiting}></Cell>\r\n                     ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"info\">\r\n                <div className=\"info__turn\">Ход: {room?.turn}</div>\r\n                <div className=\"info__turnOwner\">Чей ход: {room?.current_turn}</div>\r\n            </div>\r\n            {final.isFinal ?\r\n            <Final final={final.final} id={final.id}></Final> : <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}